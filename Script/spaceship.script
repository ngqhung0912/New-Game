-- This control the movement, speed and other thing related to the spaceship. 


function init(self)
	-- make sure the script will receive user input
	msg.post(".", "acquire_input_focus")

end

function update(self, dt)
	local source = "/spaceship_controller #spaceship_co"
	local velocity = go.get(source, "linear_velocity")
	local max_velocity = 150
	-- velocity cap 
	if velocity.x > max_velocity then 
		velocity.x = max_velocity 
	elseif velocity.x < -max_velocity then 
		velocity.x = -max_velocity 
	end 
	
	if velocity.y > max_velocity then 
		velocity.y = max_velocity 
	elseif velocity.y < -max_velocity then 
		velocity.y = -max_velocity 
	end 	
end 

function on_input(self, action_id, action)
	-- update direction of movement based on currently pressed keys
	if action_id == hash("up") then
		msg.post("#spaceship_co", "apply_force", {force = vmath.vector3(0, 500, 0), position = go.get_world_position()})
		
	elseif action_id == hash("down") then
		msg.post("#spaceship_co", "apply_force", {force = vmath.vector3(0, -500, 0), position = go.get_world_position()})
	
	elseif action_id == hash("left") then
		msg.post("#spaceship_co", "apply_force", {force = vmath.vector3(-500, 0, 0), position = go.get_world_position()})
		
	elseif action_id == hash("right") then
		msg.post("#spaceship_co", "apply_force", {force = vmath.vector3(500, 0, 0), position = go.get_world_position()})
	end
		
end

function on_message(self, message_id, message, sender)
	if message_id == hash("reset") then
		self.speed = 0
		go.set(".", "euler.z", 0)
		msg.post("/spaceship_controller #spaceship_co", "enable")

	elseif message_id == hash("contact_point_response") then

		if message.group == hash("meteor") then
			msg.post("/spaceship_controller #spaceship_co", "disable")
			msg.post("#", "reset")
			-- local pos = go.get_position()
			-- local explosion = factory.create("/explosion_controller #explosion_factory",pos,nil,{},0.5)
			-- msg.post(explosion, "set_parent", { parent_id = go.get_id() })
			msg.post("/new_meteor_controller#factory_controller", "reset")
		end 
	end 

end 
